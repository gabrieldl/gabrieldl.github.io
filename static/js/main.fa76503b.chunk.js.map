{"version":3,"sources":["components/Home/index.jsx","components/About/index.jsx","components/HeaderLink/index.jsx","components/Header/index.jsx","components/Projects/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","src","process","alt","About","HeaderLink","page","selected","title","charAt","toUpperCase","slice","to","Header","useParams","Projects","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAqBeA,EAjBF,WACT,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qCACA,oDACA,4DAEJ,qBAAKA,UAAU,SAAf,SACI,qBAAKC,IAAG,UAAKC,uBAAL,sBACJC,IAAI,0BCCTC,G,MAXM,WACjB,OACI,sBAAKJ,UAAU,QAAf,UACI,uCACA,qBAAKA,UAAU,OAAf,mDCcGK,G,MAnBI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,EAAQF,EAAKG,OAAO,GAAGC,cAAgBJ,EAAKK,MAAM,GACpDX,EAAYO,EAAW,sBAAwB,GAOnD,OANAP,GAAa,mBAOX,eAAC,IAAD,CAAMY,GAAE,WAAMN,GAAQN,UAAWA,EAAjC,UACGQ,EACD,qBAAKR,UAAWO,EAAW,wBAA0B,iBAArD,oBCESM,G,MAZA,WACX,IAAQP,GAASQ,eAAe,QAAxBR,KAER,OACI,sBAAKN,UAAU,SAAf,UACI,cAAC,EAAD,CAAYM,KAAK,OAAOC,SAAmB,SAATD,IAClC,cAAC,EAAD,CAAYA,KAAK,QAAQC,SAAmB,UAATD,IACnC,cAAC,EAAD,CAAYA,KAAK,WAAWC,SAAmB,aAATD,SCGnCS,G,MAXS,WACpB,OACI,sBAAKf,UAAU,WAAf,UACI,0CACA,qBAAKA,UAAU,OAAf,oDCcGgB,MAff,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,KAAK,SAASC,UAAWL,IAChC,cAAC,IAAD,CAAOM,OAAK,EAACF,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOM,OAAK,EAACF,KAAK,IAAIC,UAAWnB,IACjC,cAAC,IAAD,CAAOoB,OAAK,EAACF,KAAK,QAAQC,UAAWnB,IACrC,cAAC,IAAD,CAAOoB,OAAK,EAACF,KAAK,SAASC,UAAWd,IACtC,cAAC,IAAD,CAAOe,OAAK,EAACF,KAAK,YAAYC,UAAWH,UCJlCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa76503b.chunk.js","sourcesContent":["import './style.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport React from 'react'\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"title\">\n                <h1>Hi,</h1>\n                <p>My name is Gabriel.</p>\n                <p>I like writing software.</p>\n            </div>\n            <div className=\"person\">\n                <img src={`${process.env.PUBLIC_URL}/androidTurtle.png`}\n                    alt=\"a picture of me\">\n                </img>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import \"./style.css\"\n\nimport React from 'react'\n\nexport const About = () => {\n    return (\n        <div className=\"about\">\n            <h1>About</h1>\n            <div className=\"body\">\n                developments will follow, surely\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","import { Link } from 'react-router-dom';\nimport './style.css';\n\nconst HeaderLink = ({ page, selected }) => {\n  const title = page.charAt(0).toUpperCase() + page.slice(1);\n  let className = selected ? 'headerlink-no-link ' : '';\n  className += 'headerlink-title';\n\n  // for aesthetic, put dashes below selected tab\n\n\n\n  return (\n    <Link to={`/${page}`} className={className}>\n      {title}\n      <div className={selected ? 'headerlink-dot-active' : 'headerlink-dot'}>\n        *\n      </div>\n    </Link>\n  );\n};\n\nexport default HeaderLink;","import HeaderLink from '../HeaderLink';\nimport \"./style.css\"\n\nimport { Link, useParams } from 'react-router-dom';\n\nconst Header = () => {\n    const { page } = useParams() || 'home';\n\n    return (\n        <div className='header'>\n            <HeaderLink page='home' selected={page === 'home'} />\n            <HeaderLink page='about' selected={page === 'about'} />\n            <HeaderLink page='projects' selected={page === 'projects'} />\n        </div>\n    );\n};\n\nexport default Header;","import \"./style.css\"\n\nimport React from 'react'\n\nexport const Projects = () => {\n    return (\n        <div className=\"projects\">\n            <h1>Projects</h1>\n            <div className=\"body\">\n                projects will be put here, really    \n             </div>\n        </div>\n    )\n}\n\nexport default Projects\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home'\nimport About from './components/About'\nimport Header from './components/Header';\nimport Projects from './components/Projects'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Route path='/:page' component={Header} />\n        <Route exact path='/' component={Header} />\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/home\" component={Home}></Route>\n        <Route exact path=\"/about\" component={About}></Route>\n        <Route exact path=\"/projects\" component={Projects}></Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}